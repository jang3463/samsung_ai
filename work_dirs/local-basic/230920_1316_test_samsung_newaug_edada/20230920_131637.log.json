{"env_info": "sys.platform: linux\nPython: 3.8.3 (default, Jul  2 2020, 16:21:59) [GCC 7.3.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 4090\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.5.2\nMMCV: 1.3.7\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMSegmentation: 0.16.0+f8aa289", "seed": 1, "exp_name": "230920_1316_test_samsung_newaug_edada", "mmseg_version": "0.16.0+f8aa289", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='HRDAEncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='HRDAHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=12,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=False,\n            loss_weight=1.0,\n            loss_name='loss_ce'),\n        single_scale_head='DAFormerHead',\n        attention_classwise=True,\n        hr_loss_weight=0.1),\n    train_cfg=dict(\n        work_dir='work_dirs/local-basic/230920_1316_test_samsung_newaug_edada'\n    ),\n    test_cfg=dict(\n        mode='slide',\n        batched_slide=True,\n        stride=[512, 512],\n        crop_size=[1024, 1024]),\n    scales=[1, 0.5],\n    hr_crop_size=[512, 512],\n    feature_scale=0.5,\n    crop_coord_divisible=8,\n    hr_slide_inference=True)\ndataset_type = 'samsung'\ndata_root = 'data/samsung_source/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (1024, 1024)\ngta_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(2048, 1024)),\n    dict(type='RandomCrop', crop_size=(1024, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(type='GaussNoise', prob=0.3),\n    dict(type='Distortion', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1920, 1080)),\n    dict(type='RandomCrop', crop_size=(1024, 1024)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1920, 1080),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=1,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SourceDataset',\n            data_root='data/samsung_total/',\n            img_dir='images',\n            ann_dir='labels',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(2048, 1024)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(1024, 1024),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(type='PhotoMetricDistortion'),\n                dict(type='GaussNoise', prob=0.3),\n                dict(type='Distortion', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(\n                    type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='TargetDataset',\n            data_root='data/samsung_target/',\n            img_dir='images',\n            ann_dir=None,\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1920, 1080)),\n                dict(type='RandomCrop', crop_size=(1024, 1024)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(type='PhotoMetricDistortion'),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(\n                    type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(\n                    type='Collect',\n                    keys=['img', 'gt_semantic_seg', 'valid_pseudo_mask'])\n            ],\n            crop_pseudo_margins=[30, 240, 30, 30]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=2.0)),\n    val=dict(\n        type='SourceDataset',\n        data_root='data/samsung_valid/',\n        img_dir='images',\n        ann_dir='labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1920, 1080),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='TargetDataset',\n        data_root='data/samsung_test/',\n        img_dir='test_image',\n        ann_dir=None,\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1920, 1080),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.99,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=0,\n    pseudo_weight_ignore_bottom=0,\n    imnet_feature_dist_lambda=0,\n    imnet_feature_dist_classes=None,\n    imnet_feature_dist_scale_min_ratio=None,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    model=dict(\n        type='HRDAEncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='HRDAHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=12,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss',\n                use_sigmoid=False,\n                loss_weight=1.0,\n                loss_name='loss_ce'),\n            single_scale_head='DAFormerHead',\n            attention_classwise=True,\n            hr_loss_weight=0.1),\n        train_cfg=dict(\n            work_dir=\n            'work_dirs/local-basic/230920_1316_test_samsung_newaug_edada'),\n        test_cfg=dict(\n            mode='slide',\n            batched_slide=True,\n            stride=[512, 512],\n            crop_size=[1024, 1024]),\n        scales=[1, 0.5],\n        hr_crop_size=[512, 512],\n        feature_scale=0.5,\n        crop_coord_divisible=8,\n        hr_slide_inference=True),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nseed = 1\nn_gpus = 2\ngpu_model = 'NVIDIA4090TI'\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=5000, max_keep_ckpts=1)\nevaluation = dict(interval=2000, metric='mIoU')\nname = '230920_1316_test_samsung_newaug_edada'\nexp = 'basic'\nname_dataset = 'samsungcityscapesHR_1024x1024'\nname_architecture = 'hrda1-512-0.1_daformer_sepaspp_sl_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'hrda1-512-0.1_daformer_sepaspp_sl'\nname_uda = 'dacs_a999_fdthings_rcs0.01-2.0_cpl2'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-basic/230920_1316_test_samsung_newaug_edada'\ngit_rev = 'f8aa28923b03afc3ec5686f4da176eea73083db8'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "Construction", "fence", "pole", "traffic light", "traffic sign", "Nature", "sky", "person", "rider", "car", "background"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [255, 255, 255]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 15450, "data_time": 0.9506, "decode.loss_seg": 2.05068, "decode.acc_seg": 13.18776, "decode.hr.loss_seg": 0.24078, "decode.hr.acc_seg": 11.67123, "mix.decode.loss_seg": 1.11955, "mix.decode.acc_seg": 19.78906, "mix.decode.hr.loss_seg": 0.1262, "mix.decode.hr.acc_seg": 18.54247, "time": 2.00697}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 15450, "data_time": 1.75759, "decode.loss_seg": 1.72967, "decode.acc_seg": 57.87551, "decode.hr.loss_seg": 0.21378, "decode.hr.acc_seg": 49.72269, "mix.decode.loss_seg": 0.89183, "mix.decode.acc_seg": 43.64222, "mix.decode.hr.loss_seg": 0.1069, "mix.decode.hr.acc_seg": 40.87159, "time": 2.73773}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 15450, "data_time": 1.40784, "decode.loss_seg": 1.26379, "decode.acc_seg": 66.97041, "decode.hr.loss_seg": 0.17227, "decode.hr.acc_seg": 65.84856, "mix.decode.loss_seg": 0.64634, "mix.decode.acc_seg": 63.60506, "mix.decode.hr.loss_seg": 0.08858, "mix.decode.hr.acc_seg": 60.36911, "time": 2.39072}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 15450, "data_time": 1.39187, "decode.loss_seg": 0.99164, "decode.acc_seg": 69.27578, "decode.hr.loss_seg": 0.14804, "decode.hr.acc_seg": 64.47809, "mix.decode.loss_seg": 0.49773, "mix.decode.acc_seg": 67.23725, "mix.decode.hr.loss_seg": 0.07408, "mix.decode.hr.acc_seg": 59.63153, "time": 2.36579}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 15450, "data_time": 1.51029, "decode.loss_seg": 0.75389, "decode.acc_seg": 72.03704, "decode.hr.loss_seg": 0.12406, "decode.hr.acc_seg": 69.0402, "mix.decode.loss_seg": 0.36841, "mix.decode.acc_seg": 72.08442, "mix.decode.hr.loss_seg": 0.05772, "mix.decode.hr.acc_seg": 67.03067, "time": 2.48958}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 15450, "data_time": 1.55344, "decode.loss_seg": 0.58253, "decode.acc_seg": 75.20402, "decode.hr.loss_seg": 0.10293, "decode.hr.acc_seg": 74.40726, "mix.decode.loss_seg": 0.27621, "mix.decode.acc_seg": 73.82777, "mix.decode.hr.loss_seg": 0.04956, "mix.decode.hr.acc_seg": 67.46248, "time": 2.52986}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 15450, "data_time": 1.5867, "decode.loss_seg": 0.49498, "decode.acc_seg": 74.77446, "decode.hr.loss_seg": 0.09009, "decode.hr.acc_seg": 77.49728, "mix.decode.loss_seg": 0.22845, "mix.decode.acc_seg": 73.55522, "mix.decode.hr.loss_seg": 0.03982, "mix.decode.hr.acc_seg": 70.61588, "time": 2.55878}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 15450, "data_time": 1.72981, "decode.loss_seg": 0.42357, "decode.acc_seg": 74.53311, "decode.hr.loss_seg": 0.07662, "decode.hr.acc_seg": 79.35976, "mix.decode.loss_seg": 0.22297, "mix.decode.acc_seg": 75.97953, "mix.decode.hr.loss_seg": 0.0378, "mix.decode.hr.acc_seg": 72.73777, "time": 2.71281}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 15450, "data_time": 1.27411, "decode.loss_seg": 0.35896, "decode.acc_seg": 76.23906, "decode.hr.loss_seg": 0.07443, "decode.hr.acc_seg": 79.82152, "mix.decode.loss_seg": 0.18988, "mix.decode.acc_seg": 75.8697, "mix.decode.hr.loss_seg": 0.03566, "mix.decode.hr.acc_seg": 70.40987, "time": 2.25824}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 15450, "data_time": 1.46719, "decode.loss_seg": 0.36384, "decode.acc_seg": 75.86543, "decode.hr.loss_seg": 0.07011, "decode.hr.acc_seg": 80.43991, "mix.decode.loss_seg": 0.21706, "mix.decode.acc_seg": 77.48458, "mix.decode.hr.loss_seg": 0.03762, "mix.decode.hr.acc_seg": 75.31844, "time": 2.44456}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 15450, "data_time": 1.67057, "decode.loss_seg": 0.31997, "decode.acc_seg": 75.56819, "decode.hr.loss_seg": 0.06164, "decode.hr.acc_seg": 78.0794, "mix.decode.loss_seg": 0.2043, "mix.decode.acc_seg": 79.73342, "mix.decode.hr.loss_seg": 0.04796, "mix.decode.hr.acc_seg": 75.44223, "time": 2.64555}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 15450, "data_time": 1.5463, "decode.loss_seg": 0.27997, "decode.acc_seg": 77.21514, "decode.hr.loss_seg": 0.05721, "decode.hr.acc_seg": 82.22092, "mix.decode.loss_seg": 0.18233, "mix.decode.acc_seg": 82.15607, "mix.decode.hr.loss_seg": 0.04147, "mix.decode.hr.acc_seg": 76.65048, "time": 2.52405}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 15450, "data_time": 1.52781, "decode.loss_seg": 0.25678, "decode.acc_seg": 77.98302, "decode.hr.loss_seg": 0.04744, "decode.hr.acc_seg": 85.05143, "mix.decode.loss_seg": 0.19082, "mix.decode.acc_seg": 81.71426, "mix.decode.hr.loss_seg": 0.03985, "mix.decode.hr.acc_seg": 79.78471, "time": 2.51035}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 15450, "data_time": 1.27183, "decode.loss_seg": 0.26529, "decode.acc_seg": 77.19262, "decode.hr.loss_seg": 0.05334, "decode.hr.acc_seg": 81.229, "mix.decode.loss_seg": 0.18225, "mix.decode.acc_seg": 80.74458, "mix.decode.hr.loss_seg": 0.03774, "mix.decode.hr.acc_seg": 79.14947, "time": 2.2506}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 15450, "data_time": 1.61974, "decode.loss_seg": 0.23838, "decode.acc_seg": 78.43519, "decode.hr.loss_seg": 0.04607, "decode.hr.acc_seg": 85.06163, "mix.decode.loss_seg": 0.16042, "mix.decode.acc_seg": 84.11421, "mix.decode.hr.loss_seg": 0.03266, "mix.decode.hr.acc_seg": 82.87865, "time": 2.60235}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 15450, "data_time": 1.29049, "decode.loss_seg": 0.20369, "decode.acc_seg": 78.92837, "decode.hr.loss_seg": 0.04004, "decode.hr.acc_seg": 85.62872, "mix.decode.loss_seg": 0.15475, "mix.decode.acc_seg": 83.80256, "mix.decode.hr.loss_seg": 0.03074, "mix.decode.hr.acc_seg": 83.61057, "time": 2.26678}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 15450, "data_time": 1.56604, "decode.loss_seg": 0.19269, "decode.acc_seg": 79.13384, "decode.hr.loss_seg": 0.03988, "decode.hr.acc_seg": 85.2021, "mix.decode.loss_seg": 0.14738, "mix.decode.acc_seg": 83.62908, "mix.decode.hr.loss_seg": 0.03086, "mix.decode.hr.acc_seg": 83.15055, "time": 2.54545}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 15450, "data_time": 1.49783, "decode.loss_seg": 0.17498, "decode.acc_seg": 79.04177, "decode.hr.loss_seg": 0.03525, "decode.hr.acc_seg": 88.51011, "mix.decode.loss_seg": 0.13714, "mix.decode.acc_seg": 85.52162, "mix.decode.hr.loss_seg": 0.03612, "mix.decode.hr.acc_seg": 83.25174, "time": 2.47828}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 15450, "data_time": 1.32121, "decode.loss_seg": 0.17935, "decode.acc_seg": 80.07954, "decode.hr.loss_seg": 0.03688, "decode.hr.acc_seg": 83.63887, "mix.decode.loss_seg": 0.14207, "mix.decode.acc_seg": 84.05386, "mix.decode.hr.loss_seg": 0.02834, "mix.decode.hr.acc_seg": 84.96047, "time": 2.29715}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 15450, "data_time": 1.39188, "decode.loss_seg": 0.18144, "decode.acc_seg": 79.11863, "decode.hr.loss_seg": 0.03696, "decode.hr.acc_seg": 85.04757, "mix.decode.loss_seg": 0.1403, "mix.decode.acc_seg": 83.67717, "mix.decode.hr.loss_seg": 0.02927, "mix.decode.hr.acc_seg": 85.04986, "time": 2.36852}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 15450, "data_time": 1.28191, "decode.loss_seg": 0.18125, "decode.acc_seg": 79.63298, "decode.hr.loss_seg": 0.03942, "decode.hr.acc_seg": 85.10592, "mix.decode.loss_seg": 0.14188, "mix.decode.acc_seg": 85.22318, "mix.decode.hr.loss_seg": 0.0302, "mix.decode.hr.acc_seg": 86.15844, "time": 2.3112}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 15450, "data_time": 1.36511, "decode.loss_seg": 0.16701, "decode.acc_seg": 80.22997, "decode.hr.loss_seg": 0.03356, "decode.hr.acc_seg": 86.53057, "mix.decode.loss_seg": 0.14308, "mix.decode.acc_seg": 85.6239, "mix.decode.hr.loss_seg": 0.03759, "mix.decode.hr.acc_seg": 83.89401, "time": 2.33602}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 15450, "data_time": 1.46522, "decode.loss_seg": 0.16735, "decode.acc_seg": 80.04404, "decode.hr.loss_seg": 0.03765, "decode.hr.acc_seg": 84.93274, "mix.decode.loss_seg": 0.14372, "mix.decode.acc_seg": 86.32387, "mix.decode.hr.loss_seg": 0.04266, "mix.decode.hr.acc_seg": 83.53058, "time": 2.44393}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 15450, "data_time": 1.17771, "decode.loss_seg": 0.17954, "decode.acc_seg": 79.41795, "decode.hr.loss_seg": 0.03802, "decode.hr.acc_seg": 82.95359, "mix.decode.loss_seg": 0.13383, "mix.decode.acc_seg": 86.31386, "mix.decode.hr.loss_seg": 0.02681, "mix.decode.hr.acc_seg": 86.16819, "time": 2.15602}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 15450, "data_time": 1.63296, "decode.loss_seg": 0.16735, "decode.acc_seg": 80.07818, "decode.hr.loss_seg": 0.03284, "decode.hr.acc_seg": 85.47153, "mix.decode.loss_seg": 0.15873, "mix.decode.acc_seg": 85.59429, "mix.decode.hr.loss_seg": 0.04588, "mix.decode.hr.acc_seg": 81.9082, "time": 2.60822}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 15450, "data_time": 1.24532, "decode.loss_seg": 0.18585, "decode.acc_seg": 79.05277, "decode.hr.loss_seg": 0.03486, "decode.hr.acc_seg": 85.80949, "mix.decode.loss_seg": 0.15562, "mix.decode.acc_seg": 83.76337, "mix.decode.hr.loss_seg": 0.03356, "mix.decode.hr.acc_seg": 83.46691, "time": 2.21457}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 15450, "data_time": 1.56721, "decode.loss_seg": 0.18263, "decode.acc_seg": 79.70713, "decode.hr.loss_seg": 0.03492, "decode.hr.acc_seg": 87.39762, "mix.decode.loss_seg": 0.15204, "mix.decode.acc_seg": 85.62852, "mix.decode.hr.loss_seg": 0.03, "mix.decode.hr.acc_seg": 86.49165, "time": 2.54214}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 15450, "data_time": 1.42452, "decode.loss_seg": 0.16975, "decode.acc_seg": 79.52339, "decode.hr.loss_seg": 0.03252, "decode.hr.acc_seg": 86.5976, "mix.decode.loss_seg": 0.1365, "mix.decode.acc_seg": 84.45442, "mix.decode.hr.loss_seg": 0.02882, "mix.decode.hr.acc_seg": 84.78004, "time": 2.39644}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 15450, "data_time": 1.20184, "decode.loss_seg": 0.15491, "decode.acc_seg": 80.49848, "decode.hr.loss_seg": 0.02737, "decode.hr.acc_seg": 87.29685, "mix.decode.loss_seg": 0.12758, "mix.decode.acc_seg": 86.36889, "mix.decode.hr.loss_seg": 0.02783, "mix.decode.hr.acc_seg": 84.99903, "time": 2.17955}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 15450, "data_time": 1.26705, "decode.loss_seg": 0.16512, "decode.acc_seg": 79.40214, "decode.hr.loss_seg": 0.03172, "decode.hr.acc_seg": 84.07066, "mix.decode.loss_seg": 0.13822, "mix.decode.acc_seg": 85.68404, "mix.decode.hr.loss_seg": 0.0309, "mix.decode.hr.acc_seg": 85.99357, "time": 2.24539}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 15450, "data_time": 1.12262, "decode.loss_seg": 0.17336, "decode.acc_seg": 79.35384, "decode.hr.loss_seg": 0.03329, "decode.hr.acc_seg": 86.8617, "mix.decode.loss_seg": 0.15702, "mix.decode.acc_seg": 84.11415, "mix.decode.hr.loss_seg": 0.03115, "mix.decode.hr.acc_seg": 86.0041, "time": 2.09677}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 15450, "data_time": 1.62192, "decode.loss_seg": 0.15345, "decode.acc_seg": 80.07905, "decode.hr.loss_seg": 0.03424, "decode.hr.acc_seg": 85.4293, "mix.decode.loss_seg": 0.1335, "mix.decode.acc_seg": 87.00877, "mix.decode.hr.loss_seg": 0.02738, "mix.decode.hr.acc_seg": 85.87502, "time": 2.59271}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 15450, "data_time": 1.33544, "decode.loss_seg": 0.14637, "decode.acc_seg": 80.10974, "decode.hr.loss_seg": 0.02555, "decode.hr.acc_seg": 88.16542, "mix.decode.loss_seg": 0.12615, "mix.decode.acc_seg": 86.50181, "mix.decode.hr.loss_seg": 0.02607, "mix.decode.hr.acc_seg": 86.82403, "time": 2.30919}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 15450, "data_time": 1.79551, "decode.loss_seg": 0.14043, "decode.acc_seg": 80.84999, "decode.hr.loss_seg": 0.02694, "decode.hr.acc_seg": 87.17574, "mix.decode.loss_seg": 0.12141, "mix.decode.acc_seg": 87.79452, "mix.decode.hr.loss_seg": 0.02445, "mix.decode.hr.acc_seg": 87.05957, "time": 2.77127}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 15450, "data_time": 1.11022, "decode.loss_seg": 0.15367, "decode.acc_seg": 80.64525, "decode.hr.loss_seg": 0.03208, "decode.hr.acc_seg": 84.52712, "mix.decode.loss_seg": 0.13019, "mix.decode.acc_seg": 87.0304, "mix.decode.hr.loss_seg": 0.02378, "mix.decode.hr.acc_seg": 87.59262, "time": 2.08439}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 15450, "data_time": 1.12971, "decode.loss_seg": 0.15335, "decode.acc_seg": 80.72927, "decode.hr.loss_seg": 0.03007, "decode.hr.acc_seg": 85.7987, "mix.decode.loss_seg": 0.11989, "mix.decode.acc_seg": 86.46359, "mix.decode.hr.loss_seg": 0.02466, "mix.decode.hr.acc_seg": 88.93599, "time": 2.10178}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 15450, "data_time": 1.5741, "decode.loss_seg": 0.14313, "decode.acc_seg": 79.9922, "decode.hr.loss_seg": 0.02507, "decode.hr.acc_seg": 88.25145, "mix.decode.loss_seg": 0.11923, "mix.decode.acc_seg": 85.22804, "mix.decode.hr.loss_seg": 0.02112, "mix.decode.hr.acc_seg": 88.40179, "time": 2.55118}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 15450, "data_time": 1.32826, "decode.loss_seg": 0.15525, "decode.acc_seg": 80.37681, "decode.hr.loss_seg": 0.03287, "decode.hr.acc_seg": 85.77454, "mix.decode.loss_seg": 0.13006, "mix.decode.acc_seg": 85.70183, "mix.decode.hr.loss_seg": 0.02388, "mix.decode.hr.acc_seg": 88.48286, "time": 2.29937}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 15450, "data_time": 1.06554, "decode.loss_seg": 0.14745, "decode.acc_seg": 80.24285, "decode.hr.loss_seg": 0.02664, "decode.hr.acc_seg": 86.68009, "mix.decode.loss_seg": 0.12089, "mix.decode.acc_seg": 86.30546, "mix.decode.hr.loss_seg": 0.02349, "mix.decode.hr.acc_seg": 87.59931, "time": 2.03896}
{"mode": "train", "epoch": 1, "iter": 466, "lr": 6e-05, "memory": 15450, "aAcc": 0.9211, "mIoU": 0.6171, "mAcc": 0.7435, "IoU.road": 0.8665, "IoU.sidewalk": 0.2121, "IoU.Construction": 0.8137, "IoU.fence": 0.6421, "IoU.pole": 0.3809, "IoU.traffic light": 0.5402, "IoU.traffic sign": 0.5997, "IoU.Nature": 0.8567, "IoU.sky": 0.9583, "IoU.person": 0.4438, "IoU.rider": 0.1958, "IoU.car": 0.8954, "IoU.background": NaN, "Acc.road": 0.9054, "Acc.sidewalk": 0.8275, "Acc.Construction": 0.8923, "Acc.fence": 0.7599, "Acc.pole": 0.5463, "Acc.traffic light": 0.6436, "Acc.traffic sign": 0.6745, "Acc.Nature": 0.9189, "Acc.sky": 0.974, "Acc.person": 0.635, "Acc.rider": 0.2006, "Acc.car": 0.9436, "Acc.background": NaN, "data_time": 1.54449, "decode.loss_seg": 0.14681, "decode.acc_seg": 80.43975, "decode.hr.loss_seg": 0.0312, "decode.hr.acc_seg": 87.23276, "mix.decode.loss_seg": 0.11086, "mix.decode.acc_seg": 86.65174, "mix.decode.hr.loss_seg": 0.02553, "mix.decode.hr.acc_seg": 86.07436, "time": 2.52189}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 15450, "data_time": 6.16734, "decode.loss_seg": 0.14646, "decode.acc_seg": 80.33587, "decode.hr.loss_seg": 0.02776, "decode.hr.acc_seg": 85.88396, "mix.decode.loss_seg": 0.11958, "mix.decode.acc_seg": 87.33569, "mix.decode.hr.loss_seg": 0.02226, "mix.decode.hr.acc_seg": 88.10157, "time": 7.2042}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 15450, "data_time": 1.34616, "decode.loss_seg": 0.13584, "decode.acc_seg": 81.16787, "decode.hr.loss_seg": 0.02172, "decode.hr.acc_seg": 88.72258, "mix.decode.loss_seg": 0.10445, "mix.decode.acc_seg": 88.30648, "mix.decode.hr.loss_seg": 0.02259, "mix.decode.hr.acc_seg": 88.65073, "time": 2.32215}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 15450, "data_time": 1.72629, "decode.loss_seg": 0.13918, "decode.acc_seg": 80.81807, "decode.hr.loss_seg": 0.02903, "decode.hr.acc_seg": 86.03494, "mix.decode.loss_seg": 0.10893, "mix.decode.acc_seg": 87.42754, "mix.decode.hr.loss_seg": 0.02042, "mix.decode.hr.acc_seg": 89.48453, "time": 2.6987}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 15450, "data_time": 1.10018, "decode.loss_seg": 0.14737, "decode.acc_seg": 80.83278, "decode.hr.loss_seg": 0.02547, "decode.hr.acc_seg": 87.36998, "mix.decode.loss_seg": 0.11822, "mix.decode.acc_seg": 87.42557, "mix.decode.hr.loss_seg": 0.02632, "mix.decode.hr.acc_seg": 87.72897, "time": 2.07863}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 15450, "data_time": 1.2923, "decode.loss_seg": 0.13753, "decode.acc_seg": 80.04543, "decode.hr.loss_seg": 0.0245, "decode.hr.acc_seg": 88.71816, "mix.decode.loss_seg": 0.1091, "mix.decode.acc_seg": 86.43806, "mix.decode.hr.loss_seg": 0.0208, "mix.decode.hr.acc_seg": 89.6783, "time": 2.26295}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 15450, "data_time": 1.50247, "decode.loss_seg": 0.13878, "decode.acc_seg": 80.67491, "decode.hr.loss_seg": 0.02642, "decode.hr.acc_seg": 88.04904, "mix.decode.loss_seg": 0.10847, "mix.decode.acc_seg": 86.658, "mix.decode.hr.loss_seg": 0.01993, "mix.decode.hr.acc_seg": 91.09097, "time": 2.47933}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 15450, "data_time": 1.63041, "decode.loss_seg": 0.12249, "decode.acc_seg": 81.30731, "decode.hr.loss_seg": 0.0235, "decode.hr.acc_seg": 88.04263, "mix.decode.loss_seg": 0.09308, "mix.decode.acc_seg": 87.48068, "mix.decode.hr.loss_seg": 0.02085, "mix.decode.hr.acc_seg": 88.14332, "time": 2.60605}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 15450, "data_time": 1.43215, "decode.loss_seg": 0.13385, "decode.acc_seg": 81.36001, "decode.hr.loss_seg": 0.03311, "decode.hr.acc_seg": 86.82605, "mix.decode.loss_seg": 0.11197, "mix.decode.acc_seg": 87.33817, "mix.decode.hr.loss_seg": 0.02377, "mix.decode.hr.acc_seg": 89.38879, "time": 2.41395}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 15450, "data_time": 1.23509, "decode.loss_seg": 0.12774, "decode.acc_seg": 80.74954, "decode.hr.loss_seg": 0.02367, "decode.hr.acc_seg": 88.17646, "mix.decode.loss_seg": 0.10896, "mix.decode.acc_seg": 87.95089, "mix.decode.hr.loss_seg": 0.02468, "mix.decode.hr.acc_seg": 87.04976, "time": 2.20849}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 15450, "data_time": 1.68855, "decode.loss_seg": 0.12726, "decode.acc_seg": 80.88942, "decode.hr.loss_seg": 0.02487, "decode.hr.acc_seg": 89.18414, "mix.decode.loss_seg": 0.10572, "mix.decode.acc_seg": 86.02598, "mix.decode.hr.loss_seg": 0.02002, "mix.decode.hr.acc_seg": 88.84684, "time": 2.66684}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 15450, "data_time": 1.54361, "decode.loss_seg": 0.12432, "decode.acc_seg": 80.79442, "decode.hr.loss_seg": 0.02363, "decode.hr.acc_seg": 88.53436, "mix.decode.loss_seg": 0.11598, "mix.decode.acc_seg": 87.16563, "mix.decode.hr.loss_seg": 0.02525, "mix.decode.hr.acc_seg": 88.65606, "time": 2.52183}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 15450, "data_time": 0.96638, "decode.loss_seg": 0.11911, "decode.acc_seg": 81.89269, "decode.hr.loss_seg": 0.02309, "decode.hr.acc_seg": 88.14559, "mix.decode.loss_seg": 0.09938, "mix.decode.acc_seg": 87.44981, "mix.decode.hr.loss_seg": 0.01916, "mix.decode.hr.acc_seg": 87.21114, "time": 1.93872}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 15450, "data_time": 1.5365, "decode.loss_seg": 0.12925, "decode.acc_seg": 80.59939, "decode.hr.loss_seg": 0.02069, "decode.hr.acc_seg": 87.25839, "mix.decode.loss_seg": 0.10087, "mix.decode.acc_seg": 86.38453, "mix.decode.hr.loss_seg": 0.02049, "mix.decode.hr.acc_seg": 88.42673, "time": 2.51349}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 15450, "data_time": 1.34575, "decode.loss_seg": 0.11341, "decode.acc_seg": 81.51855, "decode.hr.loss_seg": 0.01983, "decode.hr.acc_seg": 88.1315, "mix.decode.loss_seg": 0.08898, "mix.decode.acc_seg": 88.10543, "mix.decode.hr.loss_seg": 0.01795, "mix.decode.hr.acc_seg": 87.82545, "time": 2.32227}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 15450, "data_time": 1.42257, "decode.loss_seg": 0.13153, "decode.acc_seg": 81.17883, "decode.hr.loss_seg": 0.02421, "decode.hr.acc_seg": 89.43427, "mix.decode.loss_seg": 0.10871, "mix.decode.acc_seg": 87.88249, "mix.decode.hr.loss_seg": 0.02078, "mix.decode.hr.acc_seg": 89.44521, "time": 2.4021}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 15450, "data_time": 1.61201, "decode.loss_seg": 0.11104, "decode.acc_seg": 81.41548, "decode.hr.loss_seg": 0.02085, "decode.hr.acc_seg": 89.4445, "mix.decode.loss_seg": 0.08362, "mix.decode.acc_seg": 87.65749, "mix.decode.hr.loss_seg": 0.01571, "mix.decode.hr.acc_seg": 90.27164, "time": 2.58441}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 15450, "data_time": 1.33123, "decode.loss_seg": 0.11002, "decode.acc_seg": 81.04236, "decode.hr.loss_seg": 0.01966, "decode.hr.acc_seg": 89.56384, "mix.decode.loss_seg": 0.08626, "mix.decode.acc_seg": 88.15772, "mix.decode.hr.loss_seg": 0.01745, "mix.decode.hr.acc_seg": 90.42882, "time": 2.30577}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 15450, "data_time": 1.12594, "decode.loss_seg": 0.1338, "decode.acc_seg": 80.50704, "decode.hr.loss_seg": 0.0252, "decode.hr.acc_seg": 88.17473, "mix.decode.loss_seg": 0.10097, "mix.decode.acc_seg": 86.2518, "mix.decode.hr.loss_seg": 0.0204, "mix.decode.hr.acc_seg": 86.32505, "time": 2.10004}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 6e-05, "memory": 15450, "data_time": 1.11459, "decode.loss_seg": 0.12566, "decode.acc_seg": 80.81538, "decode.hr.loss_seg": 0.02135, "decode.hr.acc_seg": 87.86129, "mix.decode.loss_seg": 0.09435, "mix.decode.acc_seg": 89.35921, "mix.decode.hr.loss_seg": 0.02018, "mix.decode.hr.acc_seg": 89.68179, "time": 2.09188}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 6e-05, "memory": 15450, "data_time": 1.54487, "decode.loss_seg": 0.12847, "decode.acc_seg": 80.56249, "decode.hr.loss_seg": 0.02732, "decode.hr.acc_seg": 87.33772, "mix.decode.loss_seg": 0.11046, "mix.decode.acc_seg": 86.88858, "mix.decode.hr.loss_seg": 0.02217, "mix.decode.hr.acc_seg": 88.4565, "time": 2.52127}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 6e-05, "memory": 15450, "data_time": 1.39379, "decode.loss_seg": 0.13942, "decode.acc_seg": 81.03656, "decode.hr.loss_seg": 0.02649, "decode.hr.acc_seg": 87.63974, "mix.decode.loss_seg": 0.13187, "mix.decode.acc_seg": 85.7315, "mix.decode.hr.loss_seg": 0.03264, "mix.decode.hr.acc_seg": 88.36575, "time": 2.42641}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 6e-05, "memory": 15450, "data_time": 1.3528, "decode.loss_seg": 0.11654, "decode.acc_seg": 82.11366, "decode.hr.loss_seg": 0.02196, "decode.hr.acc_seg": 90.26384, "mix.decode.loss_seg": 0.10783, "mix.decode.acc_seg": 86.50926, "mix.decode.hr.loss_seg": 0.02804, "mix.decode.hr.acc_seg": 86.4945, "time": 2.32681}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 6e-05, "memory": 15450, "data_time": 0.96546, "decode.loss_seg": 0.12396, "decode.acc_seg": 81.66267, "decode.hr.loss_seg": 0.02296, "decode.hr.acc_seg": 89.59229, "mix.decode.loss_seg": 0.10456, "mix.decode.acc_seg": 87.23207, "mix.decode.hr.loss_seg": 0.02376, "mix.decode.hr.acc_seg": 86.27404, "time": 1.94025}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 6e-05, "memory": 15450, "data_time": 1.48835, "decode.loss_seg": 0.11399, "decode.acc_seg": 80.99913, "decode.hr.loss_seg": 0.01995, "decode.hr.acc_seg": 91.10517, "mix.decode.loss_seg": 0.09241, "mix.decode.acc_seg": 87.256, "mix.decode.hr.loss_seg": 0.01695, "mix.decode.hr.acc_seg": 88.56675, "time": 2.46653}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 6e-05, "memory": 15450, "data_time": 1.46391, "decode.loss_seg": 0.11706, "decode.acc_seg": 81.63727, "decode.hr.loss_seg": 0.0213, "decode.hr.acc_seg": 89.09248, "mix.decode.loss_seg": 0.08739, "mix.decode.acc_seg": 86.91159, "mix.decode.hr.loss_seg": 0.01785, "mix.decode.hr.acc_seg": 88.85719, "time": 2.44872}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 6e-05, "memory": 15450, "data_time": 1.94896, "decode.loss_seg": 0.10646, "decode.acc_seg": 81.28635, "decode.hr.loss_seg": 0.01912, "decode.hr.acc_seg": 87.80697, "mix.decode.loss_seg": 0.08565, "mix.decode.acc_seg": 86.99916, "mix.decode.hr.loss_seg": 0.01624, "mix.decode.hr.acc_seg": 90.59469, "time": 2.92999}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 5e-05, "memory": 15450, "data_time": 1.28042, "decode.loss_seg": 0.12172, "decode.acc_seg": 80.79332, "decode.hr.loss_seg": 0.02176, "decode.hr.acc_seg": 87.82376, "mix.decode.loss_seg": 0.08785, "mix.decode.acc_seg": 88.21162, "mix.decode.hr.loss_seg": 0.01648, "mix.decode.hr.acc_seg": 91.21614, "time": 2.2542}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 5e-05, "memory": 15450, "data_time": 1.48816, "decode.loss_seg": 0.10486, "decode.acc_seg": 81.58748, "decode.hr.loss_seg": 0.01883, "decode.hr.acc_seg": 88.22223, "mix.decode.loss_seg": 0.08418, "mix.decode.acc_seg": 87.4506, "mix.decode.hr.loss_seg": 0.0173, "mix.decode.hr.acc_seg": 89.22947, "time": 2.46326}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 5e-05, "memory": 15450, "data_time": 1.17712, "decode.loss_seg": 0.10543, "decode.acc_seg": 81.86518, "decode.hr.loss_seg": 0.01952, "decode.hr.acc_seg": 89.08255, "mix.decode.loss_seg": 0.08768, "mix.decode.acc_seg": 87.3172, "mix.decode.hr.loss_seg": 0.01494, "mix.decode.hr.acc_seg": 90.15154, "time": 2.15249}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 5e-05, "memory": 15450, "data_time": 1.62443, "decode.loss_seg": 0.11802, "decode.acc_seg": 81.02225, "decode.hr.loss_seg": 0.02144, "decode.hr.acc_seg": 88.86653, "mix.decode.loss_seg": 0.10044, "mix.decode.acc_seg": 88.21429, "mix.decode.hr.loss_seg": 0.02311, "mix.decode.hr.acc_seg": 89.39122, "time": 2.6069}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 5e-05, "memory": 15450, "data_time": 1.82227, "decode.loss_seg": 0.12584, "decode.acc_seg": 81.20786, "decode.hr.loss_seg": 0.02006, "decode.hr.acc_seg": 89.58489, "mix.decode.loss_seg": 0.09788, "mix.decode.acc_seg": 87.15733, "mix.decode.hr.loss_seg": 0.02133, "mix.decode.hr.acc_seg": 89.09219, "time": 2.80908}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 5e-05, "memory": 15450, "data_time": 1.40839, "decode.loss_seg": 0.11111, "decode.acc_seg": 81.44738, "decode.hr.loss_seg": 0.02143, "decode.hr.acc_seg": 88.22279, "mix.decode.loss_seg": 0.09426, "mix.decode.acc_seg": 87.93185, "mix.decode.hr.loss_seg": 0.01828, "mix.decode.hr.acc_seg": 89.26397, "time": 2.40144}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 5e-05, "memory": 15450, "data_time": 1.42909, "decode.loss_seg": 0.13491, "decode.acc_seg": 80.60976, "decode.hr.loss_seg": 0.02526, "decode.hr.acc_seg": 85.97521, "mix.decode.loss_seg": 0.10479, "mix.decode.acc_seg": 87.24224, "mix.decode.hr.loss_seg": 0.0183, "mix.decode.hr.acc_seg": 88.23881, "time": 2.40214}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 5e-05, "memory": 15450, "data_time": 1.49036, "decode.loss_seg": 0.11825, "decode.acc_seg": 81.13492, "decode.hr.loss_seg": 0.02098, "decode.hr.acc_seg": 89.49979, "mix.decode.loss_seg": 0.09153, "mix.decode.acc_seg": 87.65505, "mix.decode.hr.loss_seg": 0.0195, "mix.decode.hr.acc_seg": 89.89041, "time": 2.46975}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 5e-05, "memory": 15450, "data_time": 1.18204, "decode.loss_seg": 0.11475, "decode.acc_seg": 81.21051, "decode.hr.loss_seg": 0.02251, "decode.hr.acc_seg": 88.99723, "mix.decode.loss_seg": 0.08855, "mix.decode.acc_seg": 88.49552, "mix.decode.hr.loss_seg": 0.01727, "mix.decode.hr.acc_seg": 88.19809, "time": 2.15328}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 5e-05, "memory": 15450, "data_time": 1.28084, "decode.loss_seg": 0.11499, "decode.acc_seg": 81.06741, "decode.hr.loss_seg": 0.01997, "decode.hr.acc_seg": 88.07876, "mix.decode.loss_seg": 0.09072, "mix.decode.acc_seg": 87.07325, "mix.decode.hr.loss_seg": 0.01663, "mix.decode.hr.acc_seg": 91.14986, "time": 2.25032}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 5e-05, "memory": 15450, "data_time": 1.41182, "decode.loss_seg": 0.11585, "decode.acc_seg": 81.1606, "decode.hr.loss_seg": 0.02327, "decode.hr.acc_seg": 87.48624, "mix.decode.loss_seg": 0.09075, "mix.decode.acc_seg": 88.52961, "mix.decode.hr.loss_seg": 0.01616, "mix.decode.hr.acc_seg": 89.8731, "time": 2.40287}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 5e-05, "memory": 15450, "data_time": 1.47039, "decode.loss_seg": 0.11308, "decode.acc_seg": 81.79511, "decode.hr.loss_seg": 0.02043, "decode.hr.acc_seg": 91.10836, "mix.decode.loss_seg": 0.0924, "mix.decode.acc_seg": 88.79142, "mix.decode.hr.loss_seg": 0.01777, "mix.decode.hr.acc_seg": 90.12346, "time": 2.44855}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 5e-05, "memory": 15450, "data_time": 1.6711, "decode.loss_seg": 0.1234, "decode.acc_seg": 80.0587, "decode.hr.loss_seg": 0.0242, "decode.hr.acc_seg": 84.99761, "mix.decode.loss_seg": 0.09914, "mix.decode.acc_seg": 87.50622, "mix.decode.hr.loss_seg": 0.01894, "mix.decode.hr.acc_seg": 88.97322, "time": 2.67231}
{"mode": "train", "epoch": 1, "iter": 466, "lr": 5e-05, "memory": 15450, "aAcc": 0.9418, "mIoU": 0.6953, "mAcc": 0.7906, "IoU.road": 0.9324, "IoU.sidewalk": 0.6308, "IoU.Construction": 0.8302, "IoU.fence": 0.5856, "IoU.pole": 0.4387, "IoU.traffic light": 0.6524, "IoU.traffic sign": 0.6804, "IoU.Nature": 0.8745, "IoU.sky": 0.9662, "IoU.person": 0.5154, "IoU.rider": 0.3282, "IoU.car": 0.9089, "IoU.background": NaN, "Acc.road": 0.9755, "Acc.sidewalk": 0.7746, "Acc.Construction": 0.8921, "Acc.fence": 0.804, "Acc.pole": 0.5856, "Acc.traffic light": 0.7881, "Acc.traffic sign": 0.7824, "Acc.Nature": 0.9328, "Acc.sky": 0.9825, "Acc.person": 0.641, "Acc.rider": 0.3873, "Acc.car": 0.9409, "Acc.background": NaN, "data_time": 1.80211, "decode.loss_seg": 0.10936, "decode.acc_seg": 81.29856, "decode.hr.loss_seg": 0.02121, "decode.hr.acc_seg": 87.35081, "mix.decode.loss_seg": 0.09158, "mix.decode.acc_seg": 88.94373, "mix.decode.hr.loss_seg": 0.01667, "mix.decode.hr.acc_seg": 90.28265, "time": 2.81708}
