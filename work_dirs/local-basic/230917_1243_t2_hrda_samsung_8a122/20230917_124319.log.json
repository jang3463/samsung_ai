{"env_info": "sys.platform: linux\nPython: 3.8.3 (default, Jul  2 2020, 16:21:59) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 4090\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.5.2\nMMCV: 1.3.7\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMSegmentation: 0.16.0+f8aa289", "seed": 1, "exp_name": "230917_1243_t2_hrda_samsung_8a122", "mmseg_version": "0.16.0+f8aa289", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='HRDAEncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='HRDAHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=12,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n        single_scale_head='DAFormerHead',\n        attention_classwise=True,\n        hr_loss_weight=0.1),\n    train_cfg=dict(\n        work_dir='work_dirs/local-basic/230917_1243_t2_hrda_samsung_8a122'),\n    test_cfg=dict(\n        mode='slide',\n        batched_slide=True,\n        stride=[512, 512],\n        crop_size=[1024, 1024]),\n    scales=[1, 0.5],\n    hr_crop_size=[512, 512],\n    feature_scale=0.5,\n    crop_coord_divisible=8,\n    hr_slide_inference=True)\ndataset_type = 'samsung'\ndata_root = 'data/samsung_source/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (1024, 1024)\ngta_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(2048, 1024)),\n    dict(type='RandomCrop', crop_size=(1024, 1024), cat_max_ratio=0.5),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1920, 1080)),\n    dict(type='RandomCrop', crop_size=(1024, 1024)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1920, 1080),\n        img_ratios=[0.5, 0.75, 1.0, 1.25, 1.5, 1.75],\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=1,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SourceDataset',\n            data_root='data/samsung_source/',\n            img_dir='images',\n            ann_dir='labels',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(2048, 1024)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(1024, 1024),\n                    cat_max_ratio=0.5),\n                dict(type='RandomFlip', prob=0.5),\n                dict(type='PhotoMetricDistortion'),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(\n                    type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='TargetDataset',\n            data_root='data/samsung_target/',\n            img_dir='images',\n            ann_dir=None,\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1920, 1080)),\n                dict(type='RandomCrop', crop_size=(1024, 1024)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(type='PhotoMetricDistortion'),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(\n                    type='Pad', size=(1024, 1024), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(\n                    type='Collect',\n                    keys=['img', 'gt_semantic_seg', 'valid_pseudo_mask'])\n            ],\n            crop_pseudo_margins=[30, 240, 30, 30]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=2.0)),\n    val=dict(\n        type='SourceDataset',\n        data_root='data/samsung_valid/',\n        img_dir='images',\n        ann_dir='labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1920, 1080),\n                img_ratios=[0.5, 0.75, 1.0, 1.25, 1.5, 1.75],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='TargetDataset',\n        data_root='data/samsung_test/',\n        img_dir='test_image',\n        ann_dir=None,\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1920, 1080),\n                img_ratios=[0.5, 0.75, 1.0, 1.25, 1.5, 1.75],\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.99,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=0,\n    pseudo_weight_ignore_bottom=0,\n    imnet_feature_dist_lambda=0,\n    imnet_feature_dist_classes=None,\n    imnet_feature_dist_scale_min_ratio=None,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    model=dict(\n        type='HRDAEncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='HRDAHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=12,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            single_scale_head='DAFormerHead',\n            attention_classwise=True,\n            hr_loss_weight=0.1),\n        train_cfg=dict(\n            work_dir='work_dirs/local-basic/230917_1243_t2_hrda_samsung_8a122'\n        ),\n        test_cfg=dict(\n            mode='slide',\n            batched_slide=True,\n            stride=[512, 512],\n            crop_size=[1024, 1024]),\n        scales=[1, 0.5],\n        hr_crop_size=[512, 512],\n        feature_scale=0.5,\n        crop_coord_divisible=8,\n        hr_slide_inference=True),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nseed = 1\nn_gpus = 2\ngpu_model = 'NVIDIA4090TI'\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=5000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '230917_1243_t2_hrda_samsung_8a122'\nexp = 'basic'\nname_dataset = 'samsungcityscapesHR_1024x1024'\nname_architecture = 'hrda1-512-0.1_daformer_sepaspp_sl_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'hrda1-512-0.1_daformer_sepaspp_sl'\nname_uda = 'dacs_a999_fdthings_rcs0.01-2.0_cpl2'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-basic/230917_1243_t2_hrda_samsung_8a122'\ngit_rev = 'f8aa28923b03afc3ec5686f4da176eea73083db8'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "Construction", "fence", "pole", "traffic light", "traffic sign", "Nature", "sky", "person", "rider", "car", "background"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [255, 255, 255]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 15448, "data_time": 0.02893, "decode.loss_seg": 2.03477, "decode.acc_seg": 13.72037, "decode.hr.loss_seg": 0.24223, "decode.hr.acc_seg": 14.03932, "mix.decode.loss_seg": 1.02952, "mix.decode.acc_seg": 21.18857, "mix.decode.hr.loss_seg": 0.11476, "mix.decode.hr.acc_seg": 19.11057, "time": 1.06912}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 15448, "data_time": 0.01649, "decode.loss_seg": 1.71139, "decode.acc_seg": 57.34947, "decode.hr.loss_seg": 0.21204, "decode.hr.acc_seg": 48.61655, "mix.decode.loss_seg": 0.92475, "mix.decode.acc_seg": 44.915, "mix.decode.hr.loss_seg": 0.11269, "mix.decode.hr.acc_seg": 39.47126, "time": 0.98908}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 15448, "data_time": 0.02606, "decode.loss_seg": 1.25665, "decode.acc_seg": 67.04265, "decode.hr.loss_seg": 0.17166, "decode.hr.acc_seg": 66.48569, "mix.decode.loss_seg": 0.65457, "mix.decode.acc_seg": 65.06088, "mix.decode.hr.loss_seg": 0.08802, "mix.decode.hr.acc_seg": 59.74164, "time": 0.99993}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 15448, "data_time": 0.01085, "decode.loss_seg": 0.94971, "decode.acc_seg": 70.18781, "decode.hr.loss_seg": 0.14047, "decode.hr.acc_seg": 71.14274, "mix.decode.loss_seg": 0.49348, "mix.decode.acc_seg": 68.42772, "mix.decode.hr.loss_seg": 0.07624, "mix.decode.hr.acc_seg": 65.09821, "time": 0.97908}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 15448, "data_time": 0.01126, "decode.loss_seg": 0.74721, "decode.acc_seg": 72.01355, "decode.hr.loss_seg": 0.122, "decode.hr.acc_seg": 72.04021, "mix.decode.loss_seg": 0.34355, "mix.decode.acc_seg": 71.8467, "mix.decode.hr.loss_seg": 0.0602, "mix.decode.hr.acc_seg": 64.60719, "time": 0.98746}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 15448, "data_time": 0.0249, "decode.loss_seg": 0.5795, "decode.acc_seg": 73.39865, "decode.hr.loss_seg": 0.10623, "decode.hr.acc_seg": 74.13813, "mix.decode.loss_seg": 0.30184, "mix.decode.acc_seg": 74.04456, "mix.decode.hr.loss_seg": 0.04996, "mix.decode.hr.acc_seg": 70.14719, "time": 0.99745}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 15448, "data_time": 0.01458, "decode.loss_seg": 0.46168, "decode.acc_seg": 74.4814, "decode.hr.loss_seg": 0.08623, "decode.hr.acc_seg": 78.75552, "mix.decode.loss_seg": 0.22246, "mix.decode.acc_seg": 74.93136, "mix.decode.hr.loss_seg": 0.04443, "mix.decode.hr.acc_seg": 74.77587, "time": 0.9839}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 15448, "data_time": 0.01188, "decode.loss_seg": 0.4192, "decode.acc_seg": 74.41999, "decode.hr.loss_seg": 0.07977, "decode.hr.acc_seg": 79.06232, "mix.decode.loss_seg": 0.20713, "mix.decode.acc_seg": 73.8913, "mix.decode.hr.loss_seg": 0.04065, "mix.decode.hr.acc_seg": 70.90794, "time": 0.98546}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 15448, "data_time": 0.01138, "decode.loss_seg": 0.37842, "decode.acc_seg": 74.66358, "decode.hr.loss_seg": 0.07395, "decode.hr.acc_seg": 78.31505, "mix.decode.loss_seg": 0.21249, "mix.decode.acc_seg": 75.194, "mix.decode.hr.loss_seg": 0.03715, "mix.decode.hr.acc_seg": 75.16257, "time": 0.98605}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 15448, "data_time": 0.01139, "decode.loss_seg": 0.34379, "decode.acc_seg": 74.4657, "decode.hr.loss_seg": 0.0645, "decode.hr.acc_seg": 80.89954, "mix.decode.loss_seg": 0.19915, "mix.decode.acc_seg": 78.55099, "mix.decode.hr.loss_seg": 0.03743, "mix.decode.hr.acc_seg": 71.41236, "time": 0.98287}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 15448, "data_time": 0.01721, "decode.loss_seg": 0.28583, "decode.acc_seg": 76.42205, "decode.hr.loss_seg": 0.06238, "decode.hr.acc_seg": 81.32625, "mix.decode.loss_seg": 0.19068, "mix.decode.acc_seg": 80.39933, "mix.decode.hr.loss_seg": 0.03831, "mix.decode.hr.acc_seg": 76.90438, "time": 0.98634}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 15448, "data_time": 0.01074, "decode.loss_seg": 0.25444, "decode.acc_seg": 77.28068, "decode.hr.loss_seg": 0.05296, "decode.hr.acc_seg": 84.01382, "mix.decode.loss_seg": 0.18003, "mix.decode.acc_seg": 81.02671, "mix.decode.hr.loss_seg": 0.04012, "mix.decode.hr.acc_seg": 78.73794, "time": 0.98371}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 15448, "data_time": 0.02366, "decode.loss_seg": 0.23979, "decode.acc_seg": 77.28468, "decode.hr.loss_seg": 0.04841, "decode.hr.acc_seg": 82.9357, "mix.decode.loss_seg": 0.16981, "mix.decode.acc_seg": 82.66107, "mix.decode.hr.loss_seg": 0.03567, "mix.decode.hr.acc_seg": 79.07053, "time": 0.99868}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 15448, "data_time": 0.02592, "decode.loss_seg": 0.23146, "decode.acc_seg": 77.77917, "decode.hr.loss_seg": 0.04539, "decode.hr.acc_seg": 83.75279, "mix.decode.loss_seg": 0.16542, "mix.decode.acc_seg": 83.48525, "mix.decode.hr.loss_seg": 0.03943, "mix.decode.hr.acc_seg": 80.86945, "time": 0.99919}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 15448, "data_time": 0.01131, "decode.loss_seg": 0.20752, "decode.acc_seg": 78.06135, "decode.hr.loss_seg": 0.04132, "decode.hr.acc_seg": 84.38132, "mix.decode.loss_seg": 0.15051, "mix.decode.acc_seg": 84.12774, "mix.decode.hr.loss_seg": 0.03472, "mix.decode.hr.acc_seg": 81.93629, "time": 0.98489}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 15448, "data_time": 0.01535, "decode.loss_seg": 0.19639, "decode.acc_seg": 78.70625, "decode.hr.loss_seg": 0.04256, "decode.hr.acc_seg": 85.59901, "mix.decode.loss_seg": 0.15483, "mix.decode.acc_seg": 84.52663, "mix.decode.hr.loss_seg": 0.03514, "mix.decode.hr.acc_seg": 81.33085, "time": 0.98379}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 15448, "data_time": 0.01117, "decode.loss_seg": 0.20433, "decode.acc_seg": 78.1047, "decode.hr.loss_seg": 0.04202, "decode.hr.acc_seg": 82.95549, "mix.decode.loss_seg": 0.16264, "mix.decode.acc_seg": 83.23455, "mix.decode.hr.loss_seg": 0.03701, "mix.decode.hr.acc_seg": 81.81339, "time": 0.98039}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 15448, "data_time": 0.03236, "decode.loss_seg": 0.18434, "decode.acc_seg": 78.15054, "decode.hr.loss_seg": 0.03754, "decode.hr.acc_seg": 85.51367, "mix.decode.loss_seg": 0.15722, "mix.decode.acc_seg": 82.47466, "mix.decode.hr.loss_seg": 0.03572, "mix.decode.hr.acc_seg": 81.32019, "time": 1.00215}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 15448, "data_time": 0.01151, "decode.loss_seg": 0.18802, "decode.acc_seg": 78.61456, "decode.hr.loss_seg": 0.03978, "decode.hr.acc_seg": 84.29773, "mix.decode.loss_seg": 0.15279, "mix.decode.acc_seg": 83.63731, "mix.decode.hr.loss_seg": 0.03966, "mix.decode.hr.acc_seg": 81.32005, "time": 0.98123}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 15448, "data_time": 0.03089, "decode.loss_seg": 0.1747, "decode.acc_seg": 79.05172, "decode.hr.loss_seg": 0.03156, "decode.hr.acc_seg": 88.07954, "mix.decode.loss_seg": 0.1401, "mix.decode.acc_seg": 83.76281, "mix.decode.hr.loss_seg": 0.03952, "mix.decode.hr.acc_seg": 81.07425, "time": 1.00374}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 15448, "data_time": 0.03435, "decode.loss_seg": 0.17665, "decode.acc_seg": 78.75481, "decode.hr.loss_seg": 0.04132, "decode.hr.acc_seg": 84.37087, "mix.decode.loss_seg": 0.13804, "mix.decode.acc_seg": 83.13759, "mix.decode.hr.loss_seg": 0.03425, "mix.decode.hr.acc_seg": 82.19678, "time": 1.05042}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 15448, "data_time": 0.01069, "decode.loss_seg": 0.15342, "decode.acc_seg": 79.65825, "decode.hr.loss_seg": 0.03179, "decode.hr.acc_seg": 87.94423, "mix.decode.loss_seg": 0.13339, "mix.decode.acc_seg": 85.33361, "mix.decode.hr.loss_seg": 0.03119, "mix.decode.hr.acc_seg": 84.79534, "time": 0.9776}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 15448, "data_time": 0.01127, "decode.loss_seg": 0.1698, "decode.acc_seg": 78.87111, "decode.hr.loss_seg": 0.03006, "decode.hr.acc_seg": 86.51273, "mix.decode.loss_seg": 0.14449, "mix.decode.acc_seg": 84.83438, "mix.decode.hr.loss_seg": 0.02901, "mix.decode.hr.acc_seg": 85.28413, "time": 0.98423}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 15448, "data_time": 0.01643, "decode.loss_seg": 0.15585, "decode.acc_seg": 79.55945, "decode.hr.loss_seg": 0.03435, "decode.hr.acc_seg": 87.26307, "mix.decode.loss_seg": 0.12431, "mix.decode.acc_seg": 84.65928, "mix.decode.hr.loss_seg": 0.03553, "mix.decode.hr.acc_seg": 83.56872, "time": 0.99173}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 15448, "data_time": 0.01928, "decode.loss_seg": 0.1492, "decode.acc_seg": 79.68651, "decode.hr.loss_seg": 0.03058, "decode.hr.acc_seg": 86.16795, "mix.decode.loss_seg": 0.13355, "mix.decode.acc_seg": 85.56765, "mix.decode.hr.loss_seg": 0.03033, "mix.decode.hr.acc_seg": 84.9975, "time": 0.99053}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 15448, "data_time": 0.01865, "decode.loss_seg": 0.16362, "decode.acc_seg": 79.18389, "decode.hr.loss_seg": 0.03095, "decode.hr.acc_seg": 85.27303, "mix.decode.loss_seg": 0.14139, "mix.decode.acc_seg": 86.24932, "mix.decode.hr.loss_seg": 0.02834, "mix.decode.hr.acc_seg": 87.09137, "time": 0.98504}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 15448, "data_time": 0.01184, "decode.loss_seg": 0.15363, "decode.acc_seg": 80.0061, "decode.hr.loss_seg": 0.03171, "decode.hr.acc_seg": 86.14806, "mix.decode.loss_seg": 0.13853, "mix.decode.acc_seg": 86.73656, "mix.decode.hr.loss_seg": 0.03008, "mix.decode.hr.acc_seg": 86.64734, "time": 0.9835}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 15448, "data_time": 0.01122, "decode.loss_seg": 0.13451, "decode.acc_seg": 80.14933, "decode.hr.loss_seg": 0.02818, "decode.hr.acc_seg": 88.09404, "mix.decode.loss_seg": 0.1215, "mix.decode.acc_seg": 86.37513, "mix.decode.hr.loss_seg": 0.02816, "mix.decode.hr.acc_seg": 85.2527, "time": 0.97865}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 15448, "data_time": 0.02523, "decode.loss_seg": 0.16568, "decode.acc_seg": 78.87916, "decode.hr.loss_seg": 0.0399, "decode.hr.acc_seg": 84.99701, "mix.decode.loss_seg": 0.17056, "mix.decode.acc_seg": 83.85406, "mix.decode.hr.loss_seg": 0.08566, "mix.decode.hr.acc_seg": 81.52454, "time": 1.00034}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 15448, "data_time": 0.01153, "decode.loss_seg": 0.1694, "decode.acc_seg": 78.9577, "decode.hr.loss_seg": 0.03663, "decode.hr.acc_seg": 83.08199, "mix.decode.loss_seg": 0.15239, "mix.decode.acc_seg": 84.48368, "mix.decode.hr.loss_seg": 0.0425, "mix.decode.hr.acc_seg": 81.21666, "time": 0.98124}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 15448, "data_time": 0.01608, "decode.loss_seg": 0.14087, "decode.acc_seg": 79.83883, "decode.hr.loss_seg": 0.03162, "decode.hr.acc_seg": 86.11243, "mix.decode.loss_seg": 0.12147, "mix.decode.acc_seg": 85.43756, "mix.decode.hr.loss_seg": 0.03499, "mix.decode.hr.acc_seg": 82.61375, "time": 0.98592}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 15448, "data_time": 0.0159, "decode.loss_seg": 0.13171, "decode.acc_seg": 79.92432, "decode.hr.loss_seg": 0.02732, "decode.hr.acc_seg": 89.86759, "mix.decode.loss_seg": 0.11696, "mix.decode.acc_seg": 85.54518, "mix.decode.hr.loss_seg": 0.0348, "mix.decode.hr.acc_seg": 82.44492, "time": 0.98596}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 15448, "data_time": 0.03152, "decode.loss_seg": 0.14445, "decode.acc_seg": 79.73859, "decode.hr.loss_seg": 0.03109, "decode.hr.acc_seg": 88.87021, "mix.decode.loss_seg": 0.13275, "mix.decode.acc_seg": 85.76437, "mix.decode.hr.loss_seg": 0.03281, "mix.decode.hr.acc_seg": 85.08277, "time": 1.00213}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 15448, "data_time": 0.01166, "decode.loss_seg": 0.13945, "decode.acc_seg": 79.8864, "decode.hr.loss_seg": 0.02709, "decode.hr.acc_seg": 86.58469, "mix.decode.loss_seg": 0.1195, "mix.decode.acc_seg": 86.38827, "mix.decode.hr.loss_seg": 0.03668, "mix.decode.hr.acc_seg": 83.56949, "time": 0.98126}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 15448, "data_time": 0.01158, "decode.loss_seg": 0.13765, "decode.acc_seg": 79.65356, "decode.hr.loss_seg": 0.02727, "decode.hr.acc_seg": 86.90754, "mix.decode.loss_seg": 0.1166, "mix.decode.acc_seg": 87.62813, "mix.decode.hr.loss_seg": 0.02647, "mix.decode.hr.acc_seg": 84.36193, "time": 0.98074}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 15448, "data_time": 0.01152, "decode.loss_seg": 0.12919, "decode.acc_seg": 79.96497, "decode.hr.loss_seg": 0.02351, "decode.hr.acc_seg": 88.15183, "mix.decode.loss_seg": 0.11063, "mix.decode.acc_seg": 86.18052, "mix.decode.hr.loss_seg": 0.02569, "mix.decode.hr.acc_seg": 86.06264, "time": 0.98161}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 15448, "data_time": 0.01144, "decode.loss_seg": 0.13411, "decode.acc_seg": 80.10474, "decode.hr.loss_seg": 0.02531, "decode.hr.acc_seg": 87.94208, "mix.decode.loss_seg": 0.1114, "mix.decode.acc_seg": 87.16742, "mix.decode.hr.loss_seg": 0.02877, "mix.decode.hr.acc_seg": 84.87505, "time": 0.98319}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 15448, "data_time": 0.02204, "decode.loss_seg": 0.14115, "decode.acc_seg": 79.71101, "decode.hr.loss_seg": 0.02531, "decode.hr.acc_seg": 85.35553, "mix.decode.loss_seg": 0.11429, "mix.decode.acc_seg": 86.29739, "mix.decode.hr.loss_seg": 0.02501, "mix.decode.hr.acc_seg": 86.04599, "time": 0.99325}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 15448, "data_time": 0.01172, "decode.loss_seg": 0.13275, "decode.acc_seg": 80.01027, "decode.hr.loss_seg": 0.02344, "decode.hr.acc_seg": 87.69612, "mix.decode.loss_seg": 0.11308, "mix.decode.acc_seg": 87.71747, "mix.decode.hr.loss_seg": 0.02217, "mix.decode.hr.acc_seg": 88.32797, "time": 0.98035}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 6e-05, "memory": 15448, "data_time": 0.03923, "decode.loss_seg": 0.15561, "decode.acc_seg": 79.29959, "decode.hr.loss_seg": 0.02896, "decode.hr.acc_seg": 85.40997, "mix.decode.loss_seg": 0.11665, "mix.decode.acc_seg": 84.85245, "mix.decode.hr.loss_seg": 0.02276, "mix.decode.hr.acc_seg": 86.77963, "time": 1.00954}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 15448, "data_time": 0.01369, "decode.loss_seg": 0.11994, "decode.acc_seg": 80.2457, "decode.hr.loss_seg": 0.02672, "decode.hr.acc_seg": 85.23766, "mix.decode.loss_seg": 0.1055, "mix.decode.acc_seg": 87.23309, "mix.decode.hr.loss_seg": 0.02527, "mix.decode.hr.acc_seg": 86.73791, "time": 1.03787}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 15448, "data_time": 0.01113, "decode.loss_seg": 0.12395, "decode.acc_seg": 80.20934, "decode.hr.loss_seg": 0.02441, "decode.hr.acc_seg": 87.93447, "mix.decode.loss_seg": 0.09894, "mix.decode.acc_seg": 87.07268, "mix.decode.hr.loss_seg": 0.02316, "mix.decode.hr.acc_seg": 86.89048, "time": 0.97687}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 15448, "data_time": 0.01416, "decode.loss_seg": 0.11676, "decode.acc_seg": 80.46137, "decode.hr.loss_seg": 0.02364, "decode.hr.acc_seg": 87.69199, "mix.decode.loss_seg": 0.10188, "mix.decode.acc_seg": 88.80802, "mix.decode.hr.loss_seg": 0.02485, "mix.decode.hr.acc_seg": 88.27168, "time": 0.98027}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 15448, "data_time": 0.02986, "decode.loss_seg": 0.11893, "decode.acc_seg": 80.40327, "decode.hr.loss_seg": 0.02641, "decode.hr.acc_seg": 87.67363, "mix.decode.loss_seg": 0.10423, "mix.decode.acc_seg": 86.44318, "mix.decode.hr.loss_seg": 0.02193, "mix.decode.hr.acc_seg": 88.87755, "time": 1.00063}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 15448, "data_time": 0.03283, "decode.loss_seg": 0.12363, "decode.acc_seg": 80.45559, "decode.hr.loss_seg": 0.02082, "decode.hr.acc_seg": 89.52208, "mix.decode.loss_seg": 0.0865, "mix.decode.acc_seg": 87.25712, "mix.decode.hr.loss_seg": 0.01856, "mix.decode.hr.acc_seg": 88.70195, "time": 1.00205}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 15448, "data_time": 0.01086, "decode.loss_seg": 0.15596, "decode.acc_seg": 79.41894, "decode.hr.loss_seg": 0.03284, "decode.hr.acc_seg": 85.27195, "mix.decode.loss_seg": 0.13343, "mix.decode.acc_seg": 85.46878, "mix.decode.hr.loss_seg": 0.04633, "mix.decode.hr.acc_seg": 85.05314, "time": 0.97275}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 15448, "data_time": 0.01163, "decode.loss_seg": 0.12573, "decode.acc_seg": 80.3649, "decode.hr.loss_seg": 0.02238, "decode.hr.acc_seg": 87.12807, "mix.decode.loss_seg": 0.10416, "mix.decode.acc_seg": 86.17362, "mix.decode.hr.loss_seg": 0.02804, "mix.decode.hr.acc_seg": 87.19356, "time": 0.98424}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 15448, "data_time": 0.02296, "decode.loss_seg": 0.1292, "decode.acc_seg": 80.25377, "decode.hr.loss_seg": 0.02868, "decode.hr.acc_seg": 86.4484, "mix.decode.loss_seg": 0.10845, "mix.decode.acc_seg": 85.58395, "mix.decode.hr.loss_seg": 0.02596, "mix.decode.hr.acc_seg": 86.44172, "time": 0.99582}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 15448, "data_time": 0.0333, "decode.loss_seg": 0.11826, "decode.acc_seg": 80.30155, "decode.hr.loss_seg": 0.02428, "decode.hr.acc_seg": 89.23008, "mix.decode.loss_seg": 0.09997, "mix.decode.acc_seg": 85.96612, "mix.decode.hr.loss_seg": 0.02288, "mix.decode.hr.acc_seg": 87.09904, "time": 1.0058}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 15448, "data_time": 0.02777, "decode.loss_seg": 0.12845, "decode.acc_seg": 80.12859, "decode.hr.loss_seg": 0.02802, "decode.hr.acc_seg": 86.56677, "mix.decode.loss_seg": 0.13786, "mix.decode.acc_seg": 85.6238, "mix.decode.hr.loss_seg": 0.0266, "mix.decode.hr.acc_seg": 86.01449, "time": 1.00081}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 15448, "data_time": 0.01765, "decode.loss_seg": 0.11717, "decode.acc_seg": 80.60908, "decode.hr.loss_seg": 0.02421, "decode.hr.acc_seg": 88.723, "mix.decode.loss_seg": 0.10447, "mix.decode.acc_seg": 86.55451, "mix.decode.hr.loss_seg": 0.04316, "mix.decode.hr.acc_seg": 86.20395, "time": 0.98592}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 15448, "data_time": 0.03168, "decode.loss_seg": 0.12107, "decode.acc_seg": 80.20553, "decode.hr.loss_seg": 0.02724, "decode.hr.acc_seg": 86.1293, "mix.decode.loss_seg": 0.11299, "mix.decode.acc_seg": 86.5363, "mix.decode.hr.loss_seg": 0.03113, "mix.decode.hr.acc_seg": 87.99338, "time": 1.00472}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 15448, "data_time": 0.01152, "decode.loss_seg": 0.11532, "decode.acc_seg": 80.73876, "decode.hr.loss_seg": 0.02374, "decode.hr.acc_seg": 87.11872, "mix.decode.loss_seg": 0.0965, "mix.decode.acc_seg": 86.38804, "mix.decode.hr.loss_seg": 0.025, "mix.decode.hr.acc_seg": 87.43837, "time": 0.98137}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 15448, "data_time": 0.03439, "decode.loss_seg": 0.11203, "decode.acc_seg": 80.78608, "decode.hr.loss_seg": 0.02126, "decode.hr.acc_seg": 88.64151, "mix.decode.loss_seg": 0.09925, "mix.decode.acc_seg": 87.77466, "mix.decode.hr.loss_seg": 0.02272, "mix.decode.hr.acc_seg": 89.65056, "time": 1.00646}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 15448, "data_time": 0.01206, "decode.loss_seg": 0.10864, "decode.acc_seg": 80.65422, "decode.hr.loss_seg": 0.02107, "decode.hr.acc_seg": 85.8505, "mix.decode.loss_seg": 0.08774, "mix.decode.acc_seg": 88.03985, "mix.decode.hr.loss_seg": 0.01841, "mix.decode.hr.acc_seg": 91.34333, "time": 0.98607}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 15448, "data_time": 0.01521, "decode.loss_seg": 0.11322, "decode.acc_seg": 80.68306, "decode.hr.loss_seg": 0.02227, "decode.hr.acc_seg": 86.13067, "mix.decode.loss_seg": 0.09303, "mix.decode.acc_seg": 86.4329, "mix.decode.hr.loss_seg": 0.02045, "mix.decode.hr.acc_seg": 88.81231, "time": 0.98573}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 15448, "data_time": 0.01173, "decode.loss_seg": 0.15132, "decode.acc_seg": 79.842, "decode.hr.loss_seg": 0.03253, "decode.hr.acc_seg": 87.24099, "mix.decode.loss_seg": 0.14082, "mix.decode.acc_seg": 86.04207, "mix.decode.hr.loss_seg": 0.03895, "mix.decode.hr.acc_seg": 85.95361, "time": 0.98129}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 15448, "data_time": 0.02453, "decode.loss_seg": 0.1339, "decode.acc_seg": 80.20227, "decode.hr.loss_seg": 0.02654, "decode.hr.acc_seg": 88.54353, "mix.decode.loss_seg": 0.11707, "mix.decode.acc_seg": 86.51172, "mix.decode.hr.loss_seg": 0.02618, "mix.decode.hr.acc_seg": 85.82353, "time": 0.99667}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 6e-05, "memory": 15448, "data_time": 0.01369, "decode.loss_seg": 0.11353, "decode.acc_seg": 80.67486, "decode.hr.loss_seg": 0.02237, "decode.hr.acc_seg": 88.93275, "mix.decode.loss_seg": 0.08495, "mix.decode.acc_seg": 88.47592, "mix.decode.hr.loss_seg": 0.02067, "mix.decode.hr.acc_seg": 87.28488, "time": 0.98535}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 6e-05, "memory": 15448, "data_time": 0.01526, "decode.loss_seg": 0.10462, "decode.acc_seg": 81.00538, "decode.hr.loss_seg": 0.0215, "decode.hr.acc_seg": 89.58175, "mix.decode.loss_seg": 0.09069, "mix.decode.acc_seg": 87.28141, "mix.decode.hr.loss_seg": 0.01962, "mix.decode.hr.acc_seg": 88.91938, "time": 0.98835}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 6e-05, "memory": 15448, "data_time": 0.01185, "decode.loss_seg": 0.10221, "decode.acc_seg": 80.82185, "decode.hr.loss_seg": 0.01982, "decode.hr.acc_seg": 91.53072, "mix.decode.loss_seg": 0.08992, "mix.decode.acc_seg": 87.46941, "mix.decode.hr.loss_seg": 0.02162, "mix.decode.hr.acc_seg": 88.23913, "time": 1.03304}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 6e-05, "memory": 15448, "data_time": 0.01647, "decode.loss_seg": 0.10941, "decode.acc_seg": 80.74476, "decode.hr.loss_seg": 0.01921, "decode.hr.acc_seg": 89.37654, "mix.decode.loss_seg": 0.08654, "mix.decode.acc_seg": 87.82004, "mix.decode.hr.loss_seg": 0.01731, "mix.decode.hr.acc_seg": 91.93215, "time": 0.9875}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 6e-05, "memory": 15448, "data_time": 0.03231, "decode.loss_seg": 0.10218, "decode.acc_seg": 80.9465, "decode.hr.loss_seg": 0.01846, "decode.hr.acc_seg": 88.38707, "mix.decode.loss_seg": 0.08094, "mix.decode.acc_seg": 87.68575, "mix.decode.hr.loss_seg": 0.02074, "mix.decode.hr.acc_seg": 88.82574, "time": 1.00836}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 6e-05, "memory": 15448, "data_time": 0.01637, "decode.loss_seg": 0.1075, "decode.acc_seg": 80.75681, "decode.hr.loss_seg": 0.01995, "decode.hr.acc_seg": 90.89952, "mix.decode.loss_seg": 0.09223, "mix.decode.acc_seg": 87.79682, "mix.decode.hr.loss_seg": 0.0195, "mix.decode.hr.acc_seg": 90.83828, "time": 0.98731}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 6e-05, "memory": 15448, "data_time": 0.01156, "decode.loss_seg": 0.11508, "decode.acc_seg": 80.66028, "decode.hr.loss_seg": 0.02188, "decode.hr.acc_seg": 86.30058, "mix.decode.loss_seg": 0.09175, "mix.decode.acc_seg": 87.50275, "mix.decode.hr.loss_seg": 0.01801, "mix.decode.hr.acc_seg": 89.37669, "time": 0.98098}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 6e-05, "memory": 15448, "data_time": 0.01198, "decode.loss_seg": 0.104, "decode.acc_seg": 80.8673, "decode.hr.loss_seg": 0.02011, "decode.hr.acc_seg": 88.75587, "mix.decode.loss_seg": 0.0915, "mix.decode.acc_seg": 87.25142, "mix.decode.hr.loss_seg": 0.01791, "mix.decode.hr.acc_seg": 91.58921, "time": 0.98611}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 5e-05, "memory": 15448, "data_time": 0.02417, "decode.loss_seg": 0.09673, "decode.acc_seg": 80.87283, "decode.hr.loss_seg": 0.01862, "decode.hr.acc_seg": 91.33299, "mix.decode.loss_seg": 0.08176, "mix.decode.acc_seg": 87.62096, "mix.decode.hr.loss_seg": 0.01723, "mix.decode.hr.acc_seg": 91.32949, "time": 0.99379}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 5e-05, "memory": 15448, "data_time": 0.03588, "decode.loss_seg": 0.12717, "decode.acc_seg": 80.6525, "decode.hr.loss_seg": 0.02399, "decode.hr.acc_seg": 88.09772, "mix.decode.loss_seg": 0.10066, "mix.decode.acc_seg": 88.83036, "mix.decode.hr.loss_seg": 0.02149, "mix.decode.hr.acc_seg": 86.4477, "time": 1.00836}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 5e-05, "memory": 15448, "data_time": 0.01167, "decode.loss_seg": 0.11997, "decode.acc_seg": 80.30193, "decode.hr.loss_seg": 0.02824, "decode.hr.acc_seg": 86.96653, "mix.decode.loss_seg": 0.10185, "mix.decode.acc_seg": 88.25811, "mix.decode.hr.loss_seg": 0.01864, "mix.decode.hr.acc_seg": 88.74398, "time": 0.98384}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 5e-05, "memory": 15448, "data_time": 0.01197, "decode.loss_seg": 0.11069, "decode.acc_seg": 80.8932, "decode.hr.loss_seg": 0.02189, "decode.hr.acc_seg": 87.3089, "mix.decode.loss_seg": 0.08531, "mix.decode.acc_seg": 87.3933, "mix.decode.hr.loss_seg": 0.01765, "mix.decode.hr.acc_seg": 89.47631, "time": 0.98669}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 5e-05, "memory": 15448, "data_time": 0.01577, "decode.loss_seg": 0.13657, "decode.acc_seg": 80.05859, "decode.hr.loss_seg": 0.02232, "decode.hr.acc_seg": 90.68363, "mix.decode.loss_seg": 0.1044, "mix.decode.acc_seg": 87.87969, "mix.decode.hr.loss_seg": 0.02319, "mix.decode.hr.acc_seg": 88.17697, "time": 0.98489}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 5e-05, "memory": 15448, "data_time": 0.0182, "decode.loss_seg": 0.10918, "decode.acc_seg": 80.85719, "decode.hr.loss_seg": 0.02264, "decode.hr.acc_seg": 87.19571, "mix.decode.loss_seg": 0.09003, "mix.decode.acc_seg": 88.9744, "mix.decode.hr.loss_seg": 0.01888, "mix.decode.hr.acc_seg": 90.89521, "time": 0.98795}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 5e-05, "memory": 15448, "data_time": 0.03719, "decode.loss_seg": 0.10137, "decode.acc_seg": 80.91883, "decode.hr.loss_seg": 0.01847, "decode.hr.acc_seg": 90.02795, "mix.decode.loss_seg": 0.08468, "mix.decode.acc_seg": 88.61784, "mix.decode.hr.loss_seg": 0.01639, "mix.decode.hr.acc_seg": 91.17331, "time": 1.0065}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 5e-05, "memory": 15448, "data_time": 0.01979, "decode.loss_seg": 0.10535, "decode.acc_seg": 80.67641, "decode.hr.loss_seg": 0.01814, "decode.hr.acc_seg": 88.82295, "mix.decode.loss_seg": 0.07991, "mix.decode.acc_seg": 86.18067, "mix.decode.hr.loss_seg": 0.02011, "mix.decode.hr.acc_seg": 88.56315, "time": 0.99141}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 5e-05, "memory": 15448, "data_time": 0.03365, "decode.loss_seg": 0.0982, "decode.acc_seg": 81.04488, "decode.hr.loss_seg": 0.01787, "decode.hr.acc_seg": 91.18274, "mix.decode.loss_seg": 0.08719, "mix.decode.acc_seg": 88.28197, "mix.decode.hr.loss_seg": 0.01847, "mix.decode.hr.acc_seg": 90.45065, "time": 1.00856}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 5e-05, "memory": 15448, "data_time": 0.02142, "decode.loss_seg": 0.09911, "decode.acc_seg": 81.11773, "decode.hr.loss_seg": 0.01842, "decode.hr.acc_seg": 90.23918, "mix.decode.loss_seg": 0.07921, "mix.decode.acc_seg": 87.8973, "mix.decode.hr.loss_seg": 0.0174, "mix.decode.hr.acc_seg": 88.50868, "time": 0.99093}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 5e-05, "memory": 15448, "data_time": 0.01174, "decode.loss_seg": 0.09587, "decode.acc_seg": 81.11872, "decode.hr.loss_seg": 0.01798, "decode.hr.acc_seg": 88.57067, "mix.decode.loss_seg": 0.09021, "mix.decode.acc_seg": 87.67073, "mix.decode.hr.loss_seg": 0.01582, "mix.decode.hr.acc_seg": 91.59981, "time": 0.98366}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 5e-05, "memory": 15448, "data_time": 0.02121, "decode.loss_seg": 0.09574, "decode.acc_seg": 80.90859, "decode.hr.loss_seg": 0.0185, "decode.hr.acc_seg": 87.33076, "mix.decode.loss_seg": 0.08331, "mix.decode.acc_seg": 89.12436, "mix.decode.hr.loss_seg": 0.0158, "mix.decode.hr.acc_seg": 90.92751, "time": 0.99734}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 5e-05, "memory": 15448, "data_time": 0.01215, "decode.loss_seg": 0.11328, "decode.acc_seg": 80.47528, "decode.hr.loss_seg": 0.02123, "decode.hr.acc_seg": 87.40477, "mix.decode.loss_seg": 0.09154, "mix.decode.acc_seg": 89.00506, "mix.decode.hr.loss_seg": 0.01922, "mix.decode.hr.acc_seg": 90.50284, "time": 0.98574}
